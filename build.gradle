plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
    id 'com.github.johnrengelman.shadow' version '8.1.1'

}

tasks.shadowJar {
    archiveFileName.set("InvCaptive.jar") // 파일 이름
    destinationDirectory.set(file("C:\\Users\\user\\OneDrive\\바탕 화면\\MineCraft\\plugins")) // 출력 위치
    archiveClassifier.set('') // -all 붙는 거 제거

    doFirst {
        def file = destinationDirectory.get().asFile.toPath().resolve("InvCaptive.jar").toFile()
        if (file.exists()) file.delete()
    }
}



group = 'io.github.seamo'
version = '0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}
dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.reflections:reflections:0.10.2")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.build {
    dependsOn("shadowJar") // 빌드시 shadowJar 실행되도록
}

// runServer (선택)
tasks.runServer {
    minecraftVersion("1.21.4")
}
kotlin {
    jvmToolchain(21)
}
